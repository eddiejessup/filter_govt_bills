name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: filter-govt-bills
  ECR_REGISTRY: 125839941772.dkr.ecr.eu-west-1.amazonaws.com
  IMAGE_TAG: latest
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/docker-build-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: DOCKER_BUILDKIT=1 docker build -t $ECR_REPOSITORY:$IMAGE_TAG . --cache-from=type=local,src=/tmp/docker-build-cache --cache-to=type=local,dest=/tmp/docker-build-cache

      - name: Push Docker image to Amazon ECR
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1

      - name: Create ECS task definition
        id: register-task-definition
        run: |
          TASK_DEFINITION_ARN=$(aws ecs register-task-definition --cli-input-json file://task-definition.json | jq -r .taskDefinition.taskDefinitionArn)
          echo "::set-output name=task-definition-arn::$TASK_DEFINITION_ARN"

      - name: Update ECS service
        env:
          SERVICE_NAME: filter-govt-bills
        run: |
          TASK_DEFINITION=${{ steps.register-task-definition.outputs.task-definition-arn }}
          aws ecs update-service --cluster filter-govt-bills --service $SERVICE_NAME --task-definition $TASK_DEFINITION
